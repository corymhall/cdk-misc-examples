{
  "Description": "This stack includes resources needed to deploy AWS CDK apps into this environment",
  "Parameters": {
    "FileAssetsBucketName": {
      "Type": "String",
      "Default": "",
      "Description": "The name of the S3 bucket used for file assets"
    },
    "FileAssetsBucketKmsKeyId": {
      "Type": "String",
      "Default": "",
      "Description": "Empty to create a new key (default), 'AWS_MANAGED_KEY' to use a managed S3 key, or the ID/ARN of an existing key."
    },
    "ContainerAssetsRepositoryName": {
      "Type": "String",
      "Default": "",
      "Description": "A user-provided custom name to use for the container assets ECR repository"
    },
    "Qualifier": {
      "Type": "String",
      "Default": "hnb659fds",
      "AllowedPattern": "[A-Za-z0-9_-]{1,10}",
      "ConstraintDescription": "Qualifier must be an alphanumeric identifier of at most 10 characters",
      "Description": "An identifier to distinguish multiple bootstrap stacks in the same environment"
    },
    "PublicAccessBlockConfiguration": {
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Whether or not to enable S3 Staging Bucket Public Access Block Configuration"
    }
  },
  "Conditions": {
    "HasTrustedAccounts": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Fn::Join": [
                "",
                [
                  "111111111111"
                ]
              ]
            }
          ]
        }
      ]
    },
    "HasTrustedAccountsForLookup": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Fn::Join": [
                "",
                []
              ]
            }
          ]
        }
      ]
    },
    "HasCloudFormationExecutionPolicies": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:iam::aws:policy/AdministratorAccess"
                ]
              ]
            }
          ]
        }
      ]
    },
    "HasCustomFileAssetsBucketName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "FileAssetsBucketName"
            }
          ]
        }
      ]
    },
    "CreateNewKey": {
      "Fn::Equals": [
        "",
        {
          "Ref": "FileAssetsBucketKmsKeyId"
        }
      ]
    },
    "UseAwsManagedKey": {
      "Fn::Equals": [
        "AWS_MANAGED_KEY",
        {
          "Ref": "FileAssetsBucketKmsKeyId"
        }
      ]
    },
    "HasCustomContainerAssetsRepositoryName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            {
              "Ref": "ContainerAssetsRepositoryName"
            }
          ]
        }
      ]
    },
    "UsePublicAccessBlockConfiguration": {
      "Fn::Equals": [
        "true",
        {
          "Ref": "PublicAccessBlockConfiguration"
        }
      ]
    }
  },
  "Resources": {
    "FilePublishingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::111111111111:root"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::",
                        {
                          "Fn::Sub": "${AWS::AccountId}"
                        },
                        ":root"
                      ]
                    ]
                  }
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::222222222222:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": {
          "Fn::Sub": "cdk-${Qualifier}-file-publishing-role-${AWS::AccountId}-${AWS::Region}"
        },
        "Tags": [
          {
            "Key": "aws-cdk:bootstrap-role",
            "Value": "file-publishing"
          }
        ]
      }
    },
    "FileAssetsBucketEncryptionKey": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Ref": "AWS::AccountId"
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "kms:CallerAccount": {
                    "Ref": "AWS::AccountId"
                  },
                  "kms:ViaService": [
                    {
                      "Fn::Sub": "s3.${AWS::Region}.amazonaws.com"
                    }
                  ]
                }
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Sub": "${FilePublishingRole.Arn}"
                }
              },
              "Resource": "*"
            }
          ]
        }
      },
      "Condition": "CreateNewKey"
    },
    "FileAssetsBucketEncryptionKeyAlias": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": {
          "Fn::Sub": "alias/cdk-${Qualifier}-assets-key"
        },
        "TargetKeyId": {
          "Ref": "FileAssetsBucketEncryptionKey"
        }
      },
      "Condition": "CreateNewKey"
    },
    "StagingBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::If": [
                    "CreateNewKey",
                    {
                      "Fn::Sub": "${FileAssetsBucketEncryptionKey.Arn}"
                    },
                    {
                      "Fn::If": [
                        "UseAwsManagedKey",
                        {
                          "Ref": "AWS::NoValue"
                        },
                        {
                          "Fn::Sub": "${FileAssetsBucketKmsKeyId}"
                        }
                      ]
                    }
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::If": [
            "HasCustomFileAssetsBucketName",
            {
              "Fn::Sub": "${FileAssetsBucketName}"
            },
            {
              "Fn::Sub": "cdk-${Qualifier}-assets-${AWS::AccountId}-${AWS::Region}"
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "Fn::If": [
            "UsePublicAccessBlockConfiguration",
            {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "StagingBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "StagingBucket"
        },
        "PolicyDocument": {
          "Id": "AccessControl",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AllowSSLRequestsOnly",
              "Action": "s3:*",
              "Effect": "Deny",
              "Resource": [
                {
                  "Fn::Sub": "${StagingBucket.Arn}"
                },
                {
                  "Fn::Sub": "${StagingBucket.Arn}/*"
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Principal": "*"
            }
          ]
        }
      }
    },
    "ContainerAssetsRepository": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": {
          "Fn::If": [
            "HasCustomContainerAssetsRepositoryName",
            {
              "Fn::Sub": "${ContainerAssetsRepositoryName}"
            },
            {
              "Fn::Sub": "cdk-${Qualifier}-container-assets-${AWS::AccountId}-${AWS::Region}"
            }
          ]
        }
      }
    },
    "ImagePublishingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::111111111111:root"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::",
                        {
                          "Fn::Sub": "${AWS::AccountId}"
                        },
                        ":root"
                      ]
                    ]
                  }
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::222222222222:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": {
          "Fn::Sub": "cdk-${Qualifier}-image-publishing-role-${AWS::AccountId}-${AWS::Region}"
        },
        "Tags": [
          {
            "Key": "aws-cdk:bootstrap-role",
            "Value": "image-publishing"
          }
        ]
      }
    },
    "LookupRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Ref": "AWS::AccountId"
                }
              }
            },
            {
              "Fn::If": [
                "HasTrustedAccountsForLookup",
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": []
                  }
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Fn::If": [
                "HasTrustedAccounts",
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": [
                      "111111111111"
                    ]
                  }
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/ReadOnlyAccess"
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "DontReadSecrets",
                  "Effect": "Deny",
                  "Action": [
                    "kms:Decrypt"
                  ],
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "LookupRolePolicy"
          }
        ],
        "RoleName": {
          "Fn::Sub": "cdk-${Qualifier}-lookup-role-${AWS::AccountId}-${AWS::Region}"
        },
        "Tags": [
          {
            "Key": "aws-cdk:bootstrap-role",
            "Value": "lookup"
          }
        ]
      }
    },
    "FilePublishingRoleDefaultPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Resource": [
                {
                  "Fn::Sub": "${StagingBucket.Arn}"
                },
                {
                  "Fn::Sub": "${StagingBucket.Arn}/*"
                }
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::If": [
                  "CreateNewKey",
                  {
                    "Fn::Sub": "${FileAssetsBucketEncryptionKey.Arn}"
                  },
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/${FileAssetsBucketKmsKeyId}"
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": {
          "Fn::Sub": "cdk-${Qualifier}-file-publishing-role-default-policy-${AWS::AccountId}-${AWS::Region}"
        },
        "Roles": [
          {
            "Ref": "FilePublishingRole"
          }
        ]
      }
    },
    "ImagePublishingRoleDefaultPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
                "ecr:BatchCheckLayerAvailability",
                "ecr:DescribeRepositories",
                "ecr:DescribeImages",
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer"
              ],
              "Resource": {
                "Fn::Sub": "${ContainerAssetsRepository.Arn}"
              },
              "Effect": "Allow"
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": {
          "Fn::Sub": "cdk-${Qualifier}-image-publishing-role-default-policy-${AWS::AccountId}-${AWS::Region}"
        },
        "Roles": [
          {
            "Ref": "ImagePublishingRole"
          }
        ]
      }
    },
    "CloudFormationExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": {
          "Fn::If": [
            "HasCloudFormationExecutionPolicies",
            [
              "arn:aws:iam::aws:policy/AdministratorAccess"
            ],
            {
              "Fn::If": [
                "HasTrustedAccounts",
                {
                  "Ref": "AWS::NoValue"
                },
                [
                  {
                    "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess"
                  }
                ]
              ]
            }
          ]
        },
        "RoleName": {
          "Fn::Sub": "cdk-${Qualifier}-cfn-exec-role-${AWS::AccountId}-${AWS::Region}"
        }
      }
    },
    "CdkBootstrapVersion": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "8",
        "Name": {
          "Fn::Sub": "/cdk-bootstrap/${Qualifier}/version"
        }
      }
    },
    "DeploymentActionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::111111111111:root"
                      ]
                    ]
                  },
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::",
                        {
                          "Fn::Sub": "${AWS::AccountId}"
                        },
                        ":root"
                      ]
                    ]
                  }
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::222222222222:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "CloudFormationPermissions",
                  "Effect": "Allow",
                  "Action": [
                    "cloudformation:CreateChangeSet",
                    "cloudformation:DeleteChangeSet",
                    "cloudformation:DescribeChangeSet",
                    "cloudformation:DescribeStacks",
                    "cloudformation:ExecuteChangeSet",
                    "cloudformation:CreateStack",
                    "cloudformation:UpdateStack"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "PipelineCrossAccountArtifactsBucket",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject*",
                    "s3:GetBucket*",
                    "s3:List*",
                    "s3:Abort*",
                    "s3:DeleteObject*",
                    "s3:PutObject*"
                  ],
                  "Resource": "*",
                  "Condition": {
                    "StringNotEquals": {
                      "s3:ResourceAccount": {
                        "Ref": "AWS::AccountId"
                      }
                    }
                  }
                },
                {
                  "Sid": "PipelineCrossAccountArtifactsKey",
                  "Effect": "Allow",
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                    "kms:GenerateDataKey*"
                  ],
                  "Resource": "*",
                  "Condition": {
                    "StringEquals": {
                      "kms:ViaService": {
                        "Fn::Sub": "s3.${AWS::Region}.amazonaws.com"
                      }
                    }
                  }
                },
                {
                  "Action": "iam:PassRole",
                  "Resource": {
                    "Fn::Sub": "${CloudFormationExecutionRole.Arn}"
                  },
                  "Effect": "Allow"
                },
                {
                  "Sid": "CliPermissions",
                  "Action": [
                    "cloudformation:DescribeStackEvents",
                    "cloudformation:GetTemplate",
                    "cloudformation:DeleteStack",
                    "cloudformation:UpdateTerminationProtection",
                    "sts:GetCallerIdentity"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Sid": "CliStagingBucket",
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject*",
                    "s3:GetBucket*",
                    "s3:List*"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "${StagingBucket.Arn}"
                    },
                    {
                      "Fn::Sub": "${StagingBucket.Arn}/*"
                    }
                  ]
                },
                {
                  "Sid": "ReadVersion",
                  "Effect": "Allow",
                  "Action": [
                    "ssm:GetParameter"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter${CdkBootstrapVersion}"
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "default"
          }
        ],
        "RoleName": {
          "Fn::Sub": "cdk-${Qualifier}-deploy-role-${AWS::AccountId}-${AWS::Region}"
        },
        "Tags": [
          {
            "Key": "aws-cdk:bootstrap-role",
            "Value": "deploy"
          }
        ]
      }
    },
    "SomeOtherRole18AB99B3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "some-external-id"
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::222222222222:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/*-deploy-role-*"
                    },
                    {
                      "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/*-publishing-role-*"
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": {
              "Fn::Sub": "cdk-${Qualifier}-some-other-default-policy-${AWS::AccountId}-${AWS::Region}"
            }
          }
        ],
        "RoleName": {
          "Fn::Sub": "cdk-${Qualifier}-some-other-role-${AWS::AccountId}-${AWS::Region}"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CDKToolkit/SomeOtherRole/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAA01O0W7CMAz8Ft5TQwfSnjeepj1sKh+AMtdIpkmM4gRUVf13klZCe/Ld+c6+N9jBrokI7WFjH9pgPzSO/2A6JYuDQSe5v0j0NrGEMwd0uSc4XsLXCk2BvzZaT4liJUcJPVezKefOE1sPU5E7catXHONoKp3N4HVZftNYdx+Orc5G94v4mXGgZF5oTc6GMNb/Hd1EOUkcjaqH/zXmGvrJ6ZaXeEcqOWL5F6R0v+r23h6gfYf95qrMTcwhsSfo1vkEaSmL8BIBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "CDKToolkit/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "BucketName": {
      "Description": "The name of the S3 bucket owned by the CDK toolkit stack",
      "Value": {
        "Fn::Sub": "${StagingBucket}"
      }
    },
    "BucketDomainName": {
      "Description": "The domain name of the S3 bucket owned by the CDK toolkit stack",
      "Value": {
        "Fn::Sub": "${StagingBucket.RegionalDomainName}"
      }
    },
    "FileAssetKeyArn": {
      "Description": "The ARN of the KMS key used to encrypt the asset bucket (deprecated)",
      "Value": {
        "Fn::If": [
          "CreateNewKey",
          {
            "Fn::Sub": "${FileAssetsBucketEncryptionKey.Arn}"
          },
          {
            "Fn::Sub": "${FileAssetsBucketKmsKeyId}"
          }
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "CdkBootstrap-${Qualifier}-FileAssetKeyArn"
        }
      }
    },
    "ImageRepositoryName": {
      "Description": "The name of the ECR repository which hosts docker image assets",
      "Value": {
        "Fn::Sub": "${ContainerAssetsRepository}"
      }
    },
    "BootstrapVersion": {
      "Description": "The version of the bootstrap resources that are currently mastered in this stack",
      "Value": {
        "Fn::GetAtt": [
          "CdkBootstrapVersion",
          "Value"
        ]
      }
    }
  }
}